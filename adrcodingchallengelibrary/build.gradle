apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'

kapt {
    correctErrorTypes = true
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.3.0'

    // testing dependencies
    testImplementation 'junit:junit:4.13'
    // Optional -- Robolectric environment
    testImplementation 'androidx.test:core:1.2.0'
    testImplementation 'org.robolectric:robolectric:4.3.1'
    // Optional -- Mockito framework
    testImplementation 'org.mockito:mockito-core:3.3.3'
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    // Coroutines test
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.7"
    // Core library
    androidTestImplementation 'androidx.test:core:1.2.0'
    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.ext:truth:1.2.0'
    androidTestImplementation 'com.google.truth:truth:1.0.1'
    testImplementation 'com.google.truth:truth:1.0.1'
    // Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    def glideVersion = "4.11.0"
    def retrofitVersion = '2.9.0'
    def mvrxVersion = '1.5.1'
    def epoxyVersion = '3.11.0'
    def coroutinesVersion = "1.3.6"
    def nav_version = '2.3.0'

    // mvrx
    api "com.airbnb.android:mvrx:$mvrxVersion"
    // epoxy
    api "com.airbnb.android:epoxy:$epoxyVersion"
    // epoxy databinding support
    api "com.airbnb.android:epoxy-databinding:$epoxyVersion"
    // Add the annotation processor if you are using Epoxy's annotations (recommended)
    kapt "com.airbnb.android:epoxy-processor:$epoxyVersion"

    // glide
    api "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    // retrofit
    api "com.squareup.retrofit2:retrofit:$retrofitVersion"
    // gson
    api "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    // logging interceptor
    api('com.github.ihsanbal:LoggingInterceptor:3.1.0') {
        exclude group: 'org.json', module: 'json'
    }

    // kotlin coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    // navigation jetpack
    // Kotlin
    api "androidx.navigation:navigation-fragment-ktx:$nav_version"
    api "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Google ExoPlayer
    api 'com.google.android.exoplayer:exoplayer:2.11.4'
}
